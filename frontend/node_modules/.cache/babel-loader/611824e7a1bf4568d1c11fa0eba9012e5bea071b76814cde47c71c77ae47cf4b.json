{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: events.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  const response = await fetch(\"http://localhost:8080/eventssss\");\n  if (!response.ok) {\n    //throw error\n    return {\n      isError: true,\n      message: \"Could not fetching data!\"\n    };\n    return;\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","Promise","resolve","setTimeout","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["C:/Users/User/Desktop/adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n\r\n\r\n  const events = useLoaderData();\r\n\r\n  if(events.isError) {\r\n    return <p>{events.message}</p>\r\n  }\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n\r\n  await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n  const response = await fetch(\"http://localhost:8080/eventssss\");\r\n  if (!response.ok) {\r\n    //throw error\r\n    return {isError: true, message: \"Could not fetching data!\"}\r\n    return;\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAGpB,MAAMC,MAAM,GAAGN,aAAa,EAAE;EAE9B,IAAGM,MAAM,CAACC,OAAO,EAAE;IACjB,oBAAOJ,OAAA;MAAAK,QAAA,EAAIF,MAAM,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAChC;EAEA,oBAAOV,OAAA,CAACF,UAAU;IAACK,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvC;AAACR,EAAA,CAVQD,UAAU;EAAA,QAGFJ,aAAa;AAAA;AAAAc,EAAA,GAHrBV,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAE7B,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;EAEtD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,OAAO;MAACd,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAA0B,CAAC;IAC3D;EACF,CAAC,MAAM;IACL,MAAMa,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;IACrC,OAAOD,OAAO,CAAChB,MAAM;EACvB;AACF;AAAC,IAAAQ,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}