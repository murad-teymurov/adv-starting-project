{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useParams, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const params = useParams();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n_s(EventDetailPage, \"4wV/h3ufdtqA8xf4Dnjmg0exre8=\", false, function () {\n  return [useParams, useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n  console.log(response);\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useParams","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","id","eventId","response","fetch","ok","message","status","console","log","$RefreshReg$"],"sources":["C:/Users/User/Desktop/adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { json, useParams, useRouteLoaderData } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n    const params = useParams();\r\n    const data = useRouteLoaderData(\"event-detail\");\r\n  \r\n    return (\r\n      <EventItem event={data.event} />\r\n    );\r\n  }\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventId;\r\n  \r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n  \r\n    if (!response.ok) {\r\n      throw json({message: 'Could not fetch details for selected event.'}, {\r\n        status: 500\r\n      })\r\n    } else {\r\n      return response;\r\n    }\r\n\r\n    console.log(response)\r\n  }\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,SAAS,EAAEC,kBAAkB,QAAQ,kBAAkB;AAEtE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGP,SAAS,EAAE;EAC1B,MAAMQ,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEG,OAAA,CAACF,SAAS;IAACO,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAEpC;AAACP,EAAA,CAPMD,eAAe;EAAA,QACLL,SAAS,EACXC,kBAAkB;AAAA;AAAAa,EAAA,GAF1BT,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEV;EAAM,CAAC,GAAAS,IAAA;EAC1C,MAAME,EAAE,GAAGX,MAAM,CAACY,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAA6C,CAAC,EAAE;MACnEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;EAEAK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;AACvB;AAAC,IAAAN,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}