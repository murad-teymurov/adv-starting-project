{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { json } from \"stream/consumers\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if(data.isError) {\n  //   return <p>{data.message}</p>\n  // }\n\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  // await new Promise(resolve => setTimeout(resolve, 500));\n\n  const response = await fetch(\"http://localhost:8080/eventssss\");\n  if (!response.ok) {\n    return;\n    // throw {message: \"Could not fetch data!!\"}\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useEffect","useState","useLoaderData","json","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","$RefreshReg$"],"sources":["C:/Users/User/Desktop/adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { json } from \"stream/consumers\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n\r\n  // if(data.isError) {\r\n  //   return <p>{data.message}</p>\r\n  // }\r\n\r\n  const events = data.events;\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n\r\n  // await new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n  const response = await fetch(\"http://localhost:8080/eventssss\");\r\n  if (!response.ok) {\r\n    return;\r\n    // throw {message: \"Could not fetch data!!\"}\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,EAAE;;EAE5B;EACA;EACA;;EAEA,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACvC;AAACN,EAAA,CATQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAa,EAAA,GADnBR,UAAU;AAWnB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAE7B;;EAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;EAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;EACF,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACd,IAAI,EAAE;IACrC,OAAOiB,OAAO,CAACV,MAAM;EACvB;AACF;AAAC,IAAAK,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}